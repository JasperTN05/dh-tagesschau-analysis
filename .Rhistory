get_wd()
getwd()
setwd("/desktop/studium/semester_I/DH/dh-tagesschau-analysis")
("./desktop/studium/semester_I/DH/dh-tagesschau-analysis")
getwd()
setwd("./desktop/studium/semester_I/DH/dh-tagesschau-analysis")
getwd()
dat <- read.csv("tagesschau_instagram_posts.csv",
header = TRUE, encoding = "UTF-8")
dat
View(dat)
str(dat)
summary(dat)
dim(df)
dim(dat)
install.packages("dplyr")
df <- subset(dat, ownerUsername = "tagesschau", as.Date(timestamp) > as.Date("2024-08-31"),
select = c("caption", "commentsCount", "hashtags/0", "hashtags/1", "hashtags/2",
"hashtags/3", "hashtags/4", "hashtags/5", "hashtags/6", "hashtags/7",
"hashtags/8", "hashtags/9", "hashtags/10", "hashtags/11", "inputUrl",
"likesCount", "mentions/0", "mentions/1", "mentions/2", "ownerUsername",
"taggedUsers/0/username", "taggedUsers/1/username", "taggedUsers/2/username",
"taggedUsers/3/username", "timestamp", "type", "url", "videoDuration",
"videoPlayCount", "videoUrl", "videoViewCount"))
df <- subset(dat, ownerUsername == "tagesschau", as.Date(timestamp) > as.Date("2024-08-31"),
select = c("caption", "commentsCount", "hashtags/0", "hashtags/1", "hashtags/2",
"hashtags/3", "hashtags/4", "hashtags/5", "hashtags/6", "hashtags/7",
"hashtags/8", "hashtags/9", "hashtags/10", "hashtags/11", "inputUrl",
"likesCount", "mentions/0", "mentions/1", "mentions/2", "ownerUsername",
"taggedUsers/0/username", "taggedUsers/1/username", "taggedUsers/2/username",
"taggedUsers/3/username", "timestamp", "type", "url", "videoDuration",
"videoPlayCount", "videoUrl", "videoViewCount"))
df <- subset(dat, ownerUsername == "tagesschau" & as.Date(timestamp) > as.Date("2024-08-31"),
select = c("caption", "commentsCount", "hashtags/0", "hashtags/1", "hashtags/2",
"hashtags/3", "hashtags/4", "hashtags/5", "hashtags/6", "hashtags/7",
"hashtags/8", "hashtags/9", "hashtags/10", "hashtags/11", "inputUrl",
"likesCount", "mentions/0", "mentions/1", "mentions/2", "ownerUsername",
"taggedUsers/0/username", "taggedUsers/1/username", "taggedUsers/2/username",
"taggedUsers/3/username", "timestamp", "type", "url", "videoDuration",
"videoPlayCount", "videoUrl", "videoViewCount"))
colnames(dat)
df <- subset(dat, ownerUsername == "tagesschau" & as.Date(timestamp) > as.Date("2024-08-31"),
select = c("caption", "commentsCount", "hashtags.0", "hashtags.1", "hashtags.2",
"hashtags.3", "hashtags.4", "hashtags.5", "hashtags.6", "hashtags.7",
"hashtags.8", "hashtags.9", "hashtags.10", "hashtags.11", "inputUrl",
"likesCount", "mentions.0", "mentions.1", "mentions.2", "ownerUsername",
"taggedUser.0.username", "taggedUsers.1.username", "taggedUsers.2.username",
"taggedUsers.3.username", "timestamp", "type", "url", "videoDuration",
"videoPlayCount", "videoUrl", "videoViewCount"))
df <- dat %>%
filter(
ownerUsername == "tagesschau",
as.Date(timestamp) > as.Date("2024-08-31")
) %>%
select(
caption,
commentsCount,
hashtags.0, hashtags.1, hashtags.2, hashtags.3, hashtags.4,
hashtags.5, hashtags.6, hashtags.7, hashtags.8, hashtags.9,
hashtags.10, hashtags.11,
inputUrl, likesCount,
mentions.0, mentions.1, mentions.2,
ownerUsername,
taggedUser.0.username, taggedUsers.1.username, taggedUsers.2.username, taggedUsers.3.username,
timestamp, type, url,
videoDuration, videoPlayCount, videoUrl, videoViewCount
)
install.packages("dplyr")
df <- dat %>%
filter(
ownerUsername == "tagesschau",
as.Date(timestamp) > as.Date("2024-08-31")
) %>%
select(
caption,
commentsCount,
hashtags.0, hashtags.1, hashtags.2, hashtags.3, hashtags.4,
hashtags.5, hashtags.6, hashtags.7, hashtags.8, hashtags.9,
hashtags.10, hashtags.11,
inputUrl, likesCount,
mentions.0, mentions.1, mentions.2,
ownerUsername,
taggedUser.0.username, taggedUsers.1.username, taggedUsers.2.username, taggedUsers.3.username,
timestamp, type, url,
videoDuration, videoPlayCount, videoUrl, videoViewCount
)
install.packages("dplyr")
install.packages("dplyrAssist")
install.packages(c("cluster", "survival"))
library(dplyr)
df <- dat %>%
filter(
ownerUsername == "tagesschau",
as.Date(timestamp) > as.Date("2024-08-31")
) %>%
select(
caption,
commentsCount,
hashtags.0, hashtags.1, hashtags.2, hashtags.3, hashtags.4,
hashtags.5, hashtags.6, hashtags.7, hashtags.8, hashtags.9,
hashtags.10, hashtags.11,
inputUrl, likesCount,
mentions.0, mentions.1, mentions.2,
ownerUsername,
taggedUser.0.username, taggedUsers.1.username, taggedUsers.2.username, taggedUsers.3.username,
timestamp, type, url,
videoDuration, videoPlayCount, videoUrl, videoViewCount
)
colnames(dat)
df <- dat %>%
filter(
ownerUsername == "tagesschau",
as.Date(timestamp) > as.Date("2024-08-31")
) %>%
select(
caption,
commentsCount,
hashtags.0, hashtags.1, hashtags.2, hashtags.3, hashtags.4,
hashtags.5, hashtags.6, hashtags.7, hashtags.8, hashtags.9,
hashtags.10, hashtags.11,
inputUrl, likesCount,
mentions.0, mentions.1, mentions.2,
ownerUsername,
taggedUsers.0.username, taggedUsers.1.username, taggedUsers.2.username, taggedUsers.3.username,
timestamp, type, url,
videoDuration, videoPlayCount, videoUrl, videoViewCount
)
df <- df %>%
rowwise() %>%
mutate(
usernames = paste(
c(taggedUser.0.username, taggedUsers.1.username, taggedUsers.2.username, taggedUsers.3.username),
collapse = ","
),
mentions = paste(
c(mentions.0, mentions.1, mentions.2),
collapse = ","
),
hashtags = paste(
c(hashtags.0, hashtags.1, hashtags.2, hashtags.3, hashtags.4,
hashtags.5, hashtags.6, hashtags.7, hashtags.8, hashtags.9,
hashtags.10, hashtags.11),
collapse = ","
)
) %>%
ungroup()
# Zusammenfassung in Vectoren
df <- df %>%
rowwise() %>%
mutate(
usernames = paste(
c(taggedUsers.0.username, taggedUsers.1.username, taggedUsers.2.username, taggedUsers.3.username),
collapse = ","
),
mentions = paste(
c(mentions.0, mentions.1, mentions.2),
collapse = ","
),
hashtags = paste(
c(hashtags.0, hashtags.1, hashtags.2, hashtags.3, hashtags.4,
hashtags.5, hashtags.6, hashtags.7, hashtags.8, hashtags.9,
hashtags.10, hashtags.11),
collapse = ","
)
) %>%
ungroup()
df <- df %>%
select(-starts_with("taggedUser"), -starts_with("mentions"), -starts_with("hashtags"))
View(df)
df_summarize <- function(strings) {
result <- c()
for (item in strings) {
if (item != "" && !is.na(item)) {
result <- c(result, item)
}
}
paste(result, collapse = ",")
}
df <- df %>%
rowwise() %>%
mutate(
usernames = df_summarize(
c(taggedUser.0.username, taggedUsers.1.username, taggedUsers.2.username, taggedUsers.3.username)
),
mentions = df_summarize(
c(mentions.0, mentions.1, mentions.2)
),
hashtags = df_summarize(
c(hashtags.0, hashtags.1, hashtags.2, hashtags.3, hashtags.4,
hashtags.5, hashtags.6, hashtags.7, hashtags.8, hashtags.9,
hashtags.10, hashtags.11)
)
) %>%
ungroup()
View(df)
# Workspace
setwd("./desktop/studium/semester_I/DH/dh-tagesschau-analysis")
# Library Import Statement
library(dplyr)
# CSV Datei Einlesen
dat <- read.csv("tagesschau_instagram_posts.csv",
header = TRUE, encoding = "UTF-8")
# Reihen und Zeilen des Datensatz
dim(dat)
# Data Cleaning
df <- dat %>%
filter(
ownerUsername == "tagesschau",
as.Date(timestamp) > as.Date("2024-08-31")
) %>%
select(
caption,
commentsCount,
hashtags.0, hashtags.1, hashtags.2, hashtags.3, hashtags.4,
hashtags.5, hashtags.6, hashtags.7, hashtags.8, hashtags.9,
hashtags.10, hashtags.11,
inputUrl, likesCount,
mentions.0, mentions.1, mentions.2,
ownerUsername,
taggedUsers.0.username, taggedUsers.1.username, taggedUsers.2.username, taggedUsers.3.username,
timestamp, type, url,
videoDuration, videoPlayCount, videoUrl, videoViewCount
)
# Zusammenfassung dynamische Reihen in eine Reihe mit Vectoren
df_summarize <- function(strings) {
result <- c()
for (item in strings) {
if (item != "" && !is.na(item)) {
result <- c(result, item)
}
}
paste(result, collapse = ",")
}
df <- df %>%
rowwise() %>%
mutate(
allTaggedUsernames = df_summarize(
c(taggedUsers.0.username, taggedUsers.1.username, taggedUsers.2.username, taggedUsers.3.username)
),
allMentions = df_summarize(
c(mentions.0, mentions.1, mentions.2)
),
allHashtags = df_summarize(
c(hashtags.0, hashtags.1, hashtags.2, hashtags.3, hashtags.4,
hashtags.5, hashtags.6, hashtags.7, hashtags.8, hashtags.9,
hashtags.10, hashtags.11)
)
) %>%
ungroup()
df <- df %>%
select(-starts_with("taggedUsers"), -starts_with("mentions"), -starts_with("hashtags"))
View(df)
View(df)
# Workspace
# setwd("./desktop/studium/semester_I/DH/dh-tagesschau-analysis")
# Library Import Statement
library(dplyr)
# CSV Datei Einlesen
dat <- read.csv("tagesschau_instagram_posts.csv",
header = TRUE, encoding = "UTF-8")
# Reihen und Zeilen des Datensatz
dim(dat)
# Data Cleaning
df <- dat %>%
filter(
ownerUsername == "tagesschau",
as.Date(timestamp) > as.Date("2024-08-31")
) %>%
select(
caption,
commentsCount,likesCount,
hashtags.0, hashtags.1, hashtags.2, hashtags.3, hashtags.4,
hashtags.5, hashtags.6, hashtags.7, hashtags.8, hashtags.9,
hashtags.10, hashtags.11,
mentions.0, mentions.1, mentions.2,
ownerUsername,
taggedUsers.0.username, taggedUsers.1.username, taggedUsers.2.username, taggedUsers.3.username,
timestamp, type, url,
videoDuration, videoPlayCount, videoUrl, videoViewCount
)
# Zusammenfassung dynamische Reihen in eine Reihe mit Vectoren
df_summarize <- function(strings) {
result <- c()
for (item in strings) {
if (item != "" && !is.na(item)) {
result <- c(result, item)
}
}
paste(result, collapse = ",")
}
df <- df %>%
rowwise() %>%
mutate(
allTaggedUsernames = df_summarize(
c(taggedUsers.0.username, taggedUsers.1.username, taggedUsers.2.username, taggedUsers.3.username)
),
allMentions = df_summarize(
c(mentions.0, mentions.1, mentions.2)
),
allHashtags = df_summarize(
c(hashtags.0, hashtags.1, hashtags.2, hashtags.3, hashtags.4,
hashtags.5, hashtags.6, hashtags.7, hashtags.8, hashtags.9,
hashtags.10, hashtags.11)
)
) %>%
ungroup()
df <- df %>%
select(-starts_with("taggedUsers"), -starts_with("mentions"), -starts_with("hashtags"))
View(df)
# Save the data frame to a CSV file
write.csv(df, "output.csv", row.names = FALSE)
